name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Test
        env:
          scheme: ${{ 'default' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=iPhone 13 Pro,OS=15.2"
      - name: Prepare codecov
        uses: sersoft-gmbh/swift-coverage-action@v2
        id: coverage-files
        with:
          format: lcov
          search-paths: ./DerivedData
        env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          env_vars: IOS

#  spm-test:
#    runs-on: macos-latest
#    steps:
#      - uses: maxim-lobanov/setup-xcode@v1
#        with:
#          xcode-version: latest-stable
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Build and Test
#        run: swift test --enable-code-coverage -v
#      - name: Prepare codecov
#        uses: sersoft-gmbh/swift-coverage-action@v2
#        id: coverage-files
#        with:
#          format: lcov
#          search-paths: ./.build
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v2
#        with:
#          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
#          env_vars: SPM

#  linux:
#    runs-on: ubuntu-18.04
#    steps:
#      - uses: actions/checkout@v2
#      - uses: sersoft-gmbh/SwiftyActions@v1
#        with:
#          release-version: "5"
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and Test
#        run: swift test --enable-test-discovery --enable-code-coverage -v
#      - name: Prepare codecov
#        run: |
#          llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/PapyrusPackageTests.xctest -instr-profile .build/x86_64-unknown-linux-gnu/debug/codecov/default.profdata > info_linux.lcov
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v2
#        with:
#          env_vars: LINUX
#          fail_ci_if_error: true
          
#  windows:
#    runs-on: windows-2019
#    steps:
#      - uses: actions/checkout@v2
#      - uses: MaxDesiatov/swift-windows-action@v1
#        with:
#          swift-version: "5.5.1"
#          shell-action: swift test --enable-test-discovery --enable-code-coverage -v
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v2
#        with:
#          env_vars: WINDOWS
  
